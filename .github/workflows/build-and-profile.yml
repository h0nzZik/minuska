name: Build and profile and CoqDoc

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:

    runs-on: ubuntu-24.04

    steps:
    - run: echo "APPIMAGE_EXTRACT_AND_RUN=1" >> $GITHUB_ENV

    - uses: actions/checkout@v3

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v9
    - name: Setup Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@main

    - name: 'Build Minuska'
      run: nix build -L '.#minuska' --out-link ./result-minuska

    - name: 'Run standalone benchmarks'
      run: nix develop -L '.#bench-standalone' --command ./bench-standalone/test.sh

    - name: 'Run hybrid benchmarks'
      run: nix develop -L '.#bench-hybrid' --command ./bench-hybrid/test.sh

    - name: 'Build Coq language examples'
      run: nix build -L '.#languages-in-coq'

    - name: 'Run Coq benchmarks'
      run: nix develop -L '.#bench-coq' --command ./bench-coq/build-and-profile.sh

    - name: 'Build Docker image'
      run: nix build -L '.#minuska-docker' --out-link ./result-minuska-docker

    - name: 'Archive Docker image'
      uses: actions/upload-artifact@v4
      with:
        name: 'minuska-docker-image'
        path: |
          ./result-minuska-docker
        retention-days: 5
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path:  'result-minuska/share/coq-minuska/Minuska.html/'


  deploy-pages:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  package-docker:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: 'minuska-docker-image'
#          path: './result-minuska-docker'

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Push Docker image'
        run: |
          ls
          docker image import ./result-minuska-docker ghcr.io/h0nzzik/minuska:${GITHUB_SHA}
          docker image push ghcr.io/h0nzzik/minuska:${GITHUB_SHA}


  package-rpm:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v9
    - name: Setup Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@main
    - name: Build RPM package
      run: nix build -L '.#minuska-bundle-rpm' --out-link './result-minuska-rpm'
    - name: Upload .rpm package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ vars.PKG_NAME }}-${{ github.ref_name }}-1.${{ env.DIST }}.${{ env.ARCH }}.rpm
        path: ./result-minuska-rpm/*.rpm


  package-deb:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v9
    - name: Setup Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@main
    - name: Build DEB package
      run: nix build -L '.#minuska-bundle-deb' --out-link './result-minuska-deb'
    - name: Upload .deb package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ vars.PKG_NAME }}-${{ github.ref_name }}-1.${{ env.DIST }}.${{ env.ARCH }}.deb
        path: ./result-minuska-deb/*.deb

  release:
    if: github.ref == 'refs/heads/main'
    name: Create release with all assets
    needs: [package-rpm, package-deb]
    runs-on: ubuntu-latest
    steps:
      - name: Download cached rpm, deb, and tar.gz artifacts
        uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ vars.PKG_NAME }}-${{ github.ref_name }}-1.${{ env.DIST }}.${{ env.ARCH }}.rpm/**/*.rpm
            ${{ vars.PKG_NAME }}-${{ github.ref_name }}-1.${{ env.DIST }}.${{ env.ARCH }}.deb/**/*.deb
